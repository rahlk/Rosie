{"vb.functions":{"text":"' Code from Microsoft's Visual Basic tutorial.\n\n' Allow easy reference to the System namespace classes.\nImports sys = System.test\n\n' This module houses the application's entry point.\nPublic Module modmain\n   ' Main is the application's entry point.\n   Sub Main()\n     ' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   End Sub\n\n    Sub tellOperator(ByVal task As String)\n        Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    End Sub\nEnd Module\n\nFunction yesterday() As Date  \nEnd Function  \n  \nFunction findSqrt(ByVal radicand As Single) As Single  \nEnd Function \n\nFunction hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\nEnd Function\n\n\n","pos":1,"subs":[{"vb.function":{"text":"Sub Main()\n     ' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   End Sub","pos":253,"subs":[{"vb.funcdef":{"text":"Sub Main()\n     ","pos":253,"subs":[{"vb.funcname":{"text":"Main","pos":257}}]}},{"vb.funcbody":{"text":"' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   ","pos":269}}]}},{"vb.function":{"text":"Sub tellOperator(ByVal task As String)\n        Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    End Sub","pos":373,"subs":[{"vb.funcdef":{"text":"Sub tellOperator(ByVal task As String)\n        ","pos":373,"subs":[{"vb.funcname":{"text":"tellOperator","pos":377}},{"vb.paramlist":{"text":"ByVal task As String","pos":390,"subs":[{"vb.paramstmnt":{"text":"ByVal task As String","pos":390,"subs":[{"vb.param":{"text":"task","pos":396}},{"vb.datatype":{"text":"String","pos":404}}]}}]}}]}},{"vb.funcbody":{"text":"Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    ","pos":420}}]}},{"vb.function":{"text":"Function yesterday() As Date  \nEnd Function","pos":548,"subs":[{"vb.funcdef":{"text":"Function yesterday() As Date","pos":548,"subs":[{"vb.funcname":{"text":"yesterday","pos":557}},{"vb.datatype":{"text":"Date","pos":572}}]}},{"vb.funcbody":{"text":"  \n","pos":576}}]}},{"vb.function":{"text":"Function findSqrt(ByVal radicand As Single) As Single  \nEnd Function","pos":597,"subs":[{"vb.funcdef":{"text":"Function findSqrt(ByVal radicand As Single) As Single","pos":597,"subs":[{"vb.funcname":{"text":"findSqrt","pos":606}},{"vb.paramlist":{"text":"ByVal radicand As Single","pos":615,"subs":[{"vb.paramstmnt":{"text":"ByVal radicand As Single","pos":615,"subs":[{"vb.param":{"text":"radicand","pos":621}},{"vb.datatype":{"text":"Single","pos":633}}]}}]}},{"vb.datatype":{"text":"Single","pos":644}}]}},{"vb.funcbody":{"text":"  \n","pos":650}}]}},{"vb.function":{"text":"Function hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\nEnd Function","pos":668,"subs":[{"vb.funcdef":{"text":"Function hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single","pos":668,"subs":[{"vb.funcname":{"text":"hypotenuse","pos":677}},{"vb.paramlist":{"text":"ByVal side1 As Single, ByVal side2 As Single","pos":688,"subs":[{"vb.paramstmnt":{"text":"ByVal side1 As Single","pos":688,"subs":[{"vb.param":{"text":"side1","pos":694}},{"vb.datatype":{"text":"Single","pos":703}}]}},{"vb.paramstmnt":{"text":"ByVal side2 As Single","pos":711,"subs":[{"vb.param":{"text":"side2","pos":717}},{"vb.datatype":{"text":"Single","pos":726}}]}}]}},{"vb.datatype":{"text":"Single","pos":737}}]}},{"vb.funcbody":{"text":"\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\n","pos":743}}]}}]}}
