{"vb.functions":{"pos":1,"subs":[{"vb.function":{"pos":1402,"subs":[{"vb.funcdef":{"pos":1402,"subs":[{"vb.funcname":{"pos":1406,"text":"ShowVersionInfo"}}],"text":"Sub ShowVersionInfo()\n\n        "}},{"vb.funcbody":{"pos":1433,"text":"Dim asm_file = Assembly.GetExecutingAssembly().Location\n        Dim file_ver = FileVersionInfo.GetVersionInfo(asm_file)\n\n        Console.WriteLine(\n            \"Low-level command line interface to Arsenal Image Mounter virtual\" & Environment.NewLine &\n            \"SCSI miniport driver.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Version \" & file_ver.FileVersion.ToString() & Environment.NewLine &\n            Environment.NewLine &\n            \"Copyright (C) 2012-2015 Arsenal Recon.\" & Environment.NewLine &\n            Environment.NewLine &\n            Environment.NewLine &\n            \"http:\/\/www.ArsenalRecon.com\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Arsenal Image Mounter including its kernel driver, API library,\" & Environment.NewLine &\n            \"command line and graphical user applications (\"\"the Software\"\")\" & Environment.NewLine &\n            \"are provided \"\"AS Is\"\" and \"\"WITH ALL FAULTS,\"\" without warranty\" & Environment.NewLine &\n            \"of any kind, including without limitation the warranties of\" & Environment.NewLine &\n            \"merchantability, fitness for a particular purpose and\" & Environment.NewLine &\n            \"non - infringement.Arsenal makes no warranty that the Software\" & Environment.NewLine &\n            \"is free of defects or is suitable for any particular purpose.\" & Environment.NewLine &\n            \"In no event shall Arsenal be responsible for loss or damages\" & Environment.NewLine &\n            \"arising from the installation or use of the Software, including\" & Environment.NewLine &\n            \"but not limited to any indirect, punitive, special, incidental\" & Environment.NewLine &\n            \"or consequential damages of any character including, without\" & Environment.NewLine &\n            \"limitation, damages for loss of goodwill, work stoppage,\" & Environment.NewLine &\n            \"computer failure or malfunction, or any and all other\" & Environment.NewLine &\n            \"commercial damages or losses.The entire risk as to the\" & Environment.NewLine &\n            \"quality and performance of the Software is borne by you.Should\" & Environment.NewLine &\n            \"the Software prove defective, you and not Arsenal assume the\" & Environment.NewLine &\n            \"entire cost of any service and repair.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Arsenal Consulting, Inc. (d\/b\/a Arsenal Recon) retains the copyright to the\" & Environment.NewLine &\n            \"Arsenal Image Mounter source code being made available under terms of the\" & Environment.NewLine &\n            \"Affero General Public License v3.\" & Environment.NewLine &\n            \"(http:\/\/www.fsf.org\/licensing\/licenses\/agpl-3.0.html). This source code may\" & Environment.NewLine &\n            \"be used in projects that are licensed so as to be compatible with AGPL v3.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Contributors to Arsenal Image Mounter must sign the Arsenal Contributor\" & Environment.NewLine &\n            \"Agreement(\"\"ACA\"\").The ACA gives Arsenal and the contributor joint\" & Environment.NewLine &\n            \"copyright interests in the code.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"If your project is not licensed under an AGPL v3 compatible license,\" & Environment.NewLine &\n            \"contact us directly regarding alternative licensing.\")\n\n\n    "}}],"text":"Sub ShowVersionInfo()\n\n        Dim asm_file = Assembly.GetExecutingAssembly().Location\n        Dim file_ver = FileVersionInfo.GetVersionInfo(asm_file)\n\n        Console.WriteLine(\n            \"Low-level command line interface to Arsenal Image Mounter virtual\" & Environment.NewLine &\n            \"SCSI miniport driver.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Version \" & file_ver.FileVersion.ToString() & Environment.NewLine &\n            Environment.NewLine &\n            \"Copyright (C) 2012-2015 Arsenal Recon.\" & Environment.NewLine &\n            Environment.NewLine &\n            Environment.NewLine &\n            \"http:\/\/www.ArsenalRecon.com\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Arsenal Image Mounter including its kernel driver, API library,\" & Environment.NewLine &\n            \"command line and graphical user applications (\"\"the Software\"\")\" & Environment.NewLine &\n            \"are provided \"\"AS Is\"\" and \"\"WITH ALL FAULTS,\"\" without warranty\" & Environment.NewLine &\n            \"of any kind, including without limitation the warranties of\" & Environment.NewLine &\n            \"merchantability, fitness for a particular purpose and\" & Environment.NewLine &\n            \"non - infringement.Arsenal makes no warranty that the Software\" & Environment.NewLine &\n            \"is free of defects or is suitable for any particular purpose.\" & Environment.NewLine &\n            \"In no event shall Arsenal be responsible for loss or damages\" & Environment.NewLine &\n            \"arising from the installation or use of the Software, including\" & Environment.NewLine &\n            \"but not limited to any indirect, punitive, special, incidental\" & Environment.NewLine &\n            \"or consequential damages of any character including, without\" & Environment.NewLine &\n            \"limitation, damages for loss of goodwill, work stoppage,\" & Environment.NewLine &\n            \"computer failure or malfunction, or any and all other\" & Environment.NewLine &\n            \"commercial damages or losses.The entire risk as to the\" & Environment.NewLine &\n            \"quality and performance of the Software is borne by you.Should\" & Environment.NewLine &\n            \"the Software prove defective, you and not Arsenal assume the\" & Environment.NewLine &\n            \"entire cost of any service and repair.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Arsenal Consulting, Inc. (d\/b\/a Arsenal Recon) retains the copyright to the\" & Environment.NewLine &\n            \"Arsenal Image Mounter source code being made available under terms of the\" & Environment.NewLine &\n            \"Affero General Public License v3.\" & Environment.NewLine &\n            \"(http:\/\/www.fsf.org\/licensing\/licenses\/agpl-3.0.html). This source code may\" & Environment.NewLine &\n            \"be used in projects that are licensed so as to be compatible with AGPL v3.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Contributors to Arsenal Image Mounter must sign the Arsenal Contributor\" & Environment.NewLine &\n            \"Agreement(\"\"ACA\"\").The ACA gives Arsenal and the contributor joint\" & Environment.NewLine &\n            \"copyright interests in the code.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"If your project is not licensed under an AGPL v3 compatible license,\" & Environment.NewLine &\n            \"contact us directly regarding alternative licensing.\")\n\n\n    End Sub"}}],"text":"''''' ServerModule.vb\n''''' Main module for PhysicalDiskMounterService application.\n''''' \n''''' Copyright (c) 2012-2015, Arsenal Consulting, Inc. (d\/b\/a Arsenal Recon) <http:\/\/www.ArsenalRecon.com>\n''''' This source code and API are available under the terms of the Affero General Public\n''''' License v3.\n'''''\n''''' Please see LICENSE.txt for full license terms, including the availability of\n''''' proprietary exceptions.\n''''' Questions, comments, or requests for clarification: http:\/\/ArsenalRecon.com\/contact\/\n'''''\n\nImports System.Reflection\nImports Arsenal.ImageMounter.Devio.Server.Interaction\nImports Arsenal.ImageMounter.Devio.Server.SpecializedProviders\nImports Arsenal.ImageMounter.Devio.Server.Services\nImports Arsenal.ImageMounter.Devio.Server.GenericProviders\nImports Arsenal.ImageMounter\n\nModule ServerModule\n\n    Private Event RunToEnd As EventHandler\n\n    <MTAThread()>\n    Sub Main(args As String())\n\n        Try\n            SafeMain(args)\n\n        Catch ex As AbandonedMutexException\n            Console.WriteLine(\"Unexpected client exit.\")\n            Trace.WriteLine(ex.ToString())\n\n        Catch ex As Exception\n            Console.WriteLine(ex.JoinMessages())\n            Trace.WriteLine(ex.ToString())\n\n        End Try\n\n        RaiseEvent RunToEnd(Nothing, EventArgs.Empty)\n\n        If Debugger.IsAttached Then\n            Console.ReadKey()\n        End If\n\n    End Sub\n\n    Sub ShowVersionInfo()\n\n        Dim asm_file = Assembly.GetExecutingAssembly().Location\n        Dim file_ver = FileVersionInfo.GetVersionInfo(asm_file)\n\n        Console.WriteLine(\n            \"Low-level command line interface to Arsenal Image Mounter virtual\" & Environment.NewLine &\n            \"SCSI miniport driver.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Version \" & file_ver.FileVersion.ToString() & Environment.NewLine &\n            Environment.NewLine &\n            \"Copyright (C) 2012-2015 Arsenal Recon.\" & Environment.NewLine &\n            Environment.NewLine &\n            Environment.NewLine &\n            \"http:\/\/www.ArsenalRecon.com\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Arsenal Image Mounter including its kernel driver, API library,\" & Environment.NewLine &\n            \"command line and graphical user applications (\"\"the Software\"\")\" & Environment.NewLine &\n            \"are provided \"\"AS Is\"\" and \"\"WITH ALL FAULTS,\"\" without warranty\" & Environment.NewLine &\n            \"of any kind, including without limitation the warranties of\" & Environment.NewLine &\n            \"merchantability, fitness for a particular purpose and\" & Environment.NewLine &\n            \"non - infringement.Arsenal makes no warranty that the Software\" & Environment.NewLine &\n            \"is free of defects or is suitable for any particular purpose.\" & Environment.NewLine &\n            \"In no event shall Arsenal be responsible for loss or damages\" & Environment.NewLine &\n            \"arising from the installation or use of the Software, including\" & Environment.NewLine &\n            \"but not limited to any indirect, punitive, special, incidental\" & Environment.NewLine &\n            \"or consequential damages of any character including, without\" & Environment.NewLine &\n            \"limitation, damages for loss of goodwill, work stoppage,\" & Environment.NewLine &\n            \"computer failure or malfunction, or any and all other\" & Environment.NewLine &\n            \"commercial damages or losses.The entire risk as to the\" & Environment.NewLine &\n            \"quality and performance of the Software is borne by you.Should\" & Environment.NewLine &\n            \"the Software prove defective, you and not Arsenal assume the\" & Environment.NewLine &\n            \"entire cost of any service and repair.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Arsenal Consulting, Inc. (d\/b\/a Arsenal Recon) retains the copyright to the\" & Environment.NewLine &\n            \"Arsenal Image Mounter source code being made available under terms of the\" & Environment.NewLine &\n            \"Affero General Public License v3.\" & Environment.NewLine &\n            \"(http:\/\/www.fsf.org\/licensing\/licenses\/agpl-3.0.html). This source code may\" & Environment.NewLine &\n            \"be used in projects that are licensed so as to be compatible with AGPL v3.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"Contributors to Arsenal Image Mounter must sign the Arsenal Contributor\" & Environment.NewLine &\n            \"Agreement(\"\"ACA\"\").The ACA gives Arsenal and the contributor joint\" & Environment.NewLine &\n            \"copyright interests in the code.\" & Environment.NewLine &\n            Environment.NewLine &\n            \"If your project is not licensed under an AGPL v3 compatible license,\" & Environment.NewLine &\n            \"contact us directly regarding alternative licensing.\")\n\n\n    End Sub\n\n    Sub SafeMain(args As String())\n\n        Dim DeviceName As String = Nothing\n        Dim ObjectName As String = Nothing\n        Dim ListenAddress As IPAddress = IPAddress.Any\n        Dim ListenPort As Integer\n        Dim BufferSize As Long = DevioShmService.DefaultBufferSize\n        Dim DiskAccess As FileAccess = FileAccess.ReadWrite\n        Dim Mount As Boolean = False\n        Dim ProviderName As String = \"DiscUtils\"\n        Dim ShowHelp As Boolean = False\n        Dim Verbose As Boolean\n\n        For Each arg In args\n            If arg.Equals(\"\/trace\", StringComparison.OrdinalIgnoreCase) Then\n                Trace.Listeners.Add(New ConsoleTraceListener(True))\n                Verbose = True\n            ElseIf arg.StartsWith(\"\/name=\", StringComparison.OrdinalIgnoreCase) Then\n                ObjectName = arg.Substring(\"\/name=\".Length)\n            ElseIf arg.StartsWith(\"\/ipaddress=\", StringComparison.OrdinalIgnoreCase) Then\n                ListenAddress = IPAddress.Parse(arg.Substring(\"\/ipaddress=\".Length))\n            ElseIf arg.StartsWith(\"\/port=\", StringComparison.OrdinalIgnoreCase) Then\n                ListenPort = Integer.Parse(arg.Substring(\"\/port=\".Length))\n            ElseIf arg.StartsWith(\"\/buffersize=\", StringComparison.OrdinalIgnoreCase) Then\n                BufferSize = Long.Parse(arg.Substring(\"\/buffersize=\".Length))\n            ElseIf arg.StartsWith(\"\/filename=\", StringComparison.OrdinalIgnoreCase) Then\n                DeviceName = arg.Substring(\"\/filename=\".Length)\n            ElseIf arg.StartsWith(\"\/provider=\", StringComparison.OrdinalIgnoreCase) Then\n                ProviderName = arg.Substring(\"\/provider=\".Length)\n            ElseIf arg.Equals(\"\/readonly\", StringComparison.OrdinalIgnoreCase) Then\n                DiskAccess = FileAccess.Read\n            ElseIf arg.Equals(\"\/mount\", StringComparison.OrdinalIgnoreCase) Then\n                Mount = True\n            ElseIf arg = \"\/?\" OrElse arg.Equals(\"\/help\", StringComparison.OrdinalIgnoreCase) Then\n                ShowHelp = True\n                Exit For\n            ElseIf arg.Equals(\"\/version\", StringComparison.OrdinalIgnoreCase) Then\n                ShowVersionInfo()\n                Return\n            Else\n                Console.WriteLine(\"Unsupported switch: \" & arg)\n                ShowHelp = True\n                Exit For\n            End If\n        Next\n\n        If _\n          ShowHelp OrElse\n          String.IsNullOrWhiteSpace(DeviceName) Then\n\n            Dim asmname = Assembly.GetExecutingAssembly().GetName().Name\n\n            Console.WriteLine(asmname & \".\" & Environment.NewLine &\n                              Environment.NewLine &\n                              \"Integrated command line interface to Arsenal Image Mounter virtual SCSI\" & Environment.NewLine &\n                              \"miniport driver.\" & Environment.NewLine &\n                              Environment.NewLine &\n                              \"For version information, license, copyrights and credits, type aim_cli \/version\" & Environment.NewLine &\n                              Environment.NewLine &\n                              \"Syntax, automatically select object name and mount:\" & Environment.NewLine &\n                              asmname & \" \/mount [\/readonly] [\/buffersize=bytes]\" & Environment.NewLine &\n                              \"    \/filename=imagefilename [\/provider=DiscUtils|LibEwf|MultiPartRaw]\" & Environment.NewLine &\n                              Environment.NewLine &\n                              \"Syntax, start shared memory service mode, for mounting from other applications:\" & Environment.NewLine &\n                              asmname & \" \/name=objectname [\/mount] [\/readonly] [\/buffersize=bytes]\" & Environment.NewLine &\n                              \"    \/filename=imagefilename [\/provider=DiscUtils|LibEwf|MultiPartRaw]\" & Environment.NewLine &\n                              Environment.NewLine &\n                              \"Syntax, start TCP\/IP service mode, for mounting from other computers:\" & Environment.NewLine &\n                              asmname & \" [\/ipaddress=address] \/port=tcpport [\/mount] [\/readonly]\" & Environment.NewLine &\n                              \"    \/filename=imagefilename [\/provider=DiscUtils|LibEwf|MultiPartRaw]\" & Environment.NewLine &\n                              Environment.NewLine &\n                              \"DiscUtils and MultiPartRaw support libraries are included embedded in this\" & Environment.NewLine &\n                              \"application. Libewf support needs libewf.dll, zlib.dll and msvcr100.dll as\" & Environment.NewLine &\n                              \"external dll files.\")\n\n            Return\n\n        End If\n\n        Dim Provider As IDevioProvider\n\n        Select Case ProviderName.ToLowerInvariant()\n\n            Case \"discutils\"\n                Provider = DevioServiceFactory.GetProviderDiscUtils(DeviceName, DiskAccess)\n\n            Case \"libewf\"\n                DevioProviderLibEwf.NotificationFile = \"CONOUT$\"\n                AddHandler RunToEnd,\n                    Sub() DevioProviderLibEwf.NotificationFile = Nothing\n\n                If Verbose Then\n                    DevioProviderLibEwf.NotificationVerbose = True\n                End If\n                Provider = DevioServiceFactory.GetProviderLibEwf(DeviceName, DiskAccess)\n\n            Case \"multipartraw\"\n                Provider = DevioServiceFactory.GetProviderMultiPartRaw(DeviceName, DiskAccess)\n\n            Case Else\n                Console.WriteLine(\"Provider names can be DiscUtils, LibEwf Or MultiPartRaw.\")\n                Return\n\n        End Select\n\n        Dim Service As DevioServiceBase\n\n        If Not String.IsNullOrWhiteSpace(ObjectName) Then\n\n            Service = New DevioShmService(ObjectName, Provider, OwnsProvider:=True, BufferSize:=BufferSize)\n\n        ElseIf ListenPort <> 0 Then\n\n            Service = New DevioTcpService(ListenAddress, ListenPort, Provider, OwnsProvider:=True)\n\n        ElseIf Mount Then\n\n            Service = New DevioShmService(Provider, OwnsProvider:=True, BufferSize:=BufferSize)\n\n        Else\n\n            Provider.Dispose()\n            Console.WriteLine(\"Shared memory object name, TCP\/IP port Or \/mount switch must be specified.\")\n            Return\n\n        End If\n\n        If Mount Then\n            Console.WriteLine(\"Opening image file And mounting as virtual disk...\")\n            Service.StartServiceThreadAndMount(New ScsiAdapter, 0)\n            Console.WriteLine(\"Virtual disk created. Press Ctrl+C to remove virtual disk And exit.\")\n        Else\n            Console.WriteLine(\"Opening image file...\")\n            Service.StartServiceThread()\n            Console.WriteLine(\"Image file opened, waiting for incoming connections. Press Ctrl+C to exit.\")\n        End If\n\n        AddHandler Console.CancelKeyPress,\n            Sub(sender, e)\n                Console.WriteLine(\"Stopping service...\")\n                Service.Dispose()\n\n                Try\n                    e.Cancel = True\n                Catch\n                End Try\n            End Sub\n\n        Service.WaitForServiceThreadExit()\n\n        Console.WriteLine(\"Service stopped.\")\n\n    End Sub\n\nEnd Module"}}
