{"go.functions":{"text":"\/* This file is sourced under MIT license from siddontang\/go *\/\n\npackage rpc\n\nimport (\n\t\"container\/list\"\n\t\"fmt\"\n\t\"reflect\"\n\t\"sync\"\n)\n\ntype Client struct { \/\/ Client struct\n\tsync.Mutex\n\n\tnetwork string\n\taddr    string\n\n\tmaxIdleConns int\n\n\tconns *list.List\n}\n\n\/\/ MakeRpc function\nfunc MakeRpc(rpcName string, fptr interface{}) (err error) {\n\tdefer func() {\n\t\tif e := recover(); e != nil {\n\t\t\terr = fmt.Errorf(\"make rpc error\")\n\t\t}\n\t}()\n\n\tfn := reflect.ValueOf(fptr).Elem()\n\n\tnOut := fn.Type().NumOut()\n\tif nOut == 0 || fn.Type().Out(nOut-1).Kind() != reflect.Interface {\n\t\terr = fmt.Errorf(\"%s return final output param must be error interface\", rpcName)\n\t\treturn\n\t}\n\n\t_, b := fn.Type().Out(nOut - 1).MethodByName(\"Error\")\n\tif !b {\n\t\terr = fmt.Errorf(\"%s return final output param must be error interface\", rpcName)\n\t\treturn\n\t}\n\n\tf := func(in []reflect.Value) []reflect.Value {\n\t\treturn c.call(fn, rpcName, in)\n\t}\n\n\tv := reflect.MakeFunc(fn.Type(), f)\n\tfn.Set(v)\n\n\treturn\n}\n\n\/* Following functions are sourced under MIT license from brentp\/goleft *\/\n\nfunc pcheck(e error) {\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n","pos":1,"subs":[{"go.function":{"text":"func MakeRpc(rpcName string, fptr interface{}) (err error)","pos":279,"subs":[{"go.func":{"text":"func ","pos":279}},{"go.function_name":{"text":"MakeRpc","pos":284}},{"go.parameters":{"text":"(rpcName string, fptr interface{})","pos":291,"subs":[{"go.single_param":{"text":"rpcName string","pos":292}},{"go.single_param":{"text":" fptr interface{}","pos":307}}]}},{"go.return":{"text":"(err error)","pos":326,"subs":[{"go.single_return":{"text":"err error","pos":327}}]}}]}},{"go.function":{"text":"func pcheck(e error) ","pos":1050,"subs":[{"go.func":{"text":"func ","pos":1050}},{"go.function_name":{"text":"pcheck","pos":1055}},{"go.parameters":{"text":"(e error)","pos":1061,"subs":[{"go.single_param":{"text":"e error","pos":1062}}]}}]}},{"go.function":{"text":"func min(a, b int) ","pos":1109,"subs":[{"go.func":{"text":"func ","pos":1109}},{"go.function_name":{"text":"min","pos":1114}},{"go.parameters":{"text":"(a, b int)","pos":1117,"subs":[{"go.single_param":{"text":"a","pos":1118}},{"go.single_param":{"text":" b int","pos":1120}}]}}]}},{"go.function":{"text":"func max(a, b int) ","pos":1173,"subs":[{"go.func":{"text":"func ","pos":1173}},{"go.function_name":{"text":"max","pos":1178}},{"go.parameters":{"text":"(a, b int)","pos":1181,"subs":[{"go.single_param":{"text":"a","pos":1182}},{"go.single_param":{"text":" b int","pos":1184}}]}}]}}]}}
