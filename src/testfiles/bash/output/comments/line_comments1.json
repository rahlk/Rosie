{"b.line_comments":{"text":"#!\/bin\/bash -e\n\n#export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}\nK8S_VERSION=1.1.1\n\nusage() {\ncat <<EOF\nUsage:\njencactl etcd\njencactl proxy\njencactl hyperkube\njencactl start\njencactl stop\njencactl restart\njencactl images\njencactl updatecode\njencactl help\nEOF\n\texit 1\n}\n\n# stop any container that the output of docker ps matches against the\n# given grep pattern\ngrepstop-container() {\n\tlocal pattern=$1\n\tdocker rm -f $(docker ps -a | grep $pattern | awk '{print $1}')\n}\n\n# start the etcd docker container\ncmd-etcd() {\n\tdocker run -d \\\n\t  --name etcd \\\n\t  --net host \\\n\t  kubernetes\/etcd:2.0.5.1 \\\n\t  \/usr\/local\/bin\/etcd \\\n\t  \t--addr=127.0.0.1:4001 \\\n\t  \t--bind-addr=0.0.0.0:4001 \\\n\t  \t--data-dir=\/var\/etcd\/data\n}\n\n# start the various kubernetes containers via the kyperkube\ncmd-hyperkube() {\n\tdocker run -d \\\n\t\t--net host \\\n\t\t-v \/var\/run\/docker.sock:\/var\/run\/docker.sock \\\n\t\tgcr.io\/google_containers\/hyperkube:v${K8S_VERSION} \\\n\t\t\/hyperkube kubelet \\\n\t\t\t--api_servers=http:\/\/localhost:8080 \\\n\t\t\t--v=2 \\\n\t\t\t--address=0.0.0.0 \\\n\t\t\t--enable_server \\\n\t\t\t--hostname_override=127.0.0.1 \\\n\t\t\t--config=\/etc\/kubernetes\/manifests\n}\n\n# start the kubernetes proxy (we are running the kubelet on this node)\ncmd-proxy() {\n\tdocker run -d \\\n\t\t--net host \\\n\t\t--privileged \\\n\t\tgcr.io\/google_containers\/hyperkube:v${K8S_VERSION} \\\n\t\t\/hyperkube proxy \\\n\t\t\t--master=http:\/\/127.0.0.1:8080 \\\n\t\t\t--v=2\n}\n\n# wrapper to start the whole stack\ncmd-start() {\n\tcmd-etcd\n\tcmd-hyperkube\n\tcmd-proxy\n}\n\n# logic to remove only the jenca\/kubernetes containers\ncmd-stop() {\n\tgrepstop-container k8s_scheduler || true\n\tgrepstop-container k8s_apiserver || true\n\tgrepstop-container k8s_controller-manager || true\n\tgrepstop-container k8s_controller-manager || true\n\tgrepstop-container k8s_POD || true\n\tgrepstop-container proxy || true\n\tgrepstop-container kubelet || true\n\tgrepstop-container etcd\t|| true\n\t#docker rm -f INSERTNAMESHERE\n}\n\ncmd-restart() {\n\tcmd-stop\n\tcmd-start\n}\n\n# this tool is designed for the user to have already sorted out what branch each repo\n# is on and have committed any changes etc\ncmd-updatecode-repo() {\n\tlocal repo=$1;\n\n\tif [[ ! -d \"\/vagrant\/repos\/${repo}\" ]]; then\n\t\techo \"cloning $repo\"\n\t\tmkdir -p \/vagrant\/repos\n\t\tcd \/vagrant\/repos && git clone \"git@github.com:jenca-cloud\/${repo}.git\"\n\tfi\n\n\tcd \/vagrant\/repos\/${repo} && git pull\n}\n\ncmd-updatecode() {\n\tcmd-updatecode-repo jenca-authorization\n\tcmd-updatecode-repo jenca-authentication\n\tcmd-updatecode-repo jenca-runtime\n\tcmd-updatecode-repo jenca-projects\n\tcmd-updatecode-repo jenca-library\n\tcmd-updatecode-repo jenca-router\n\tcmd-updatecode-repo jenca-gui\n\tcmd-updatecode-repo jenca-level-storage\n}\n\ncmd-build-image() {\n\tlocal repo=$1;\n\tcd \/vagrant\/repos\/${repo} && make images\n}\n\ncmd-run-tests() {\n\tlocal repo=$1;\n\tcd \/vagrant\/repos\/${repo} && make test\n}\n\ncmd-images() {\n\tcmd-build-image jenca-authentication\n\tcmd-build-image jenca-authorization\n\tcmd-build-image jenca-projects\n\tcmd-build-image jenca-router\n\tcmd-build-image jenca-gui\n\tcmd-build-image jenca-level-storage\n\tcmd-build-image jenca-library\n}\n\ncmd-test() {\n\tcmd-run-tests jenca-authentication\n\tcmd-run-tests jenca-authorization\n\tcmd-run-tests jenca-projects\n\tcmd-run-tests jenca-router\n\tcmd-run-tests jenca-gui\n\tcmd-run-tests jenca-level-storage\n\tcmd-run-tests jenca-library\n}\n\nmain() {\n\tcase \"$1\" in\n\tetcd)\t\t\t\t\t        shift; cmd-etcd; $@;;\n\thyperkube)\t\t\t\t\t  shift; cmd-hyperkube; $@;;\n\tproxy)\t\t\t\t\t      shift; cmd-proxy; $@;;\n\tstart)\t\t\t\t\t      shift; cmd-start; $@;;\n\tstop)\t\t\t\t\t        shift; cmd-stop; $@;;\n\trestart)\t\t\t\t\t    shift; cmd-restart; $@;;\n\tupdatecode)\t\t\t\t\t  shift; cmd-updatecode; $@;;\n\timages)\t\t\t\t\t      shift; cmd-images; $@;;\n\ttest)\t\t\t\t\t        shift; cmd-test; $@;;\n\t*)                    usage $@;;\n\tesac\n}\n\nmain \"$@\"\n","subs":[{"b.line_comment":{"text":"#!\/bin\/bash -e","subs":[{"b.line_comment_context":{"text":"","pos":1}},{"b.line_comment_body":{"text":"#!\/bin\/bash -e","subs":[{"b.line_comment_text":{"text":"!\/bin\/bash -e","pos":2}}],"pos":1}}],"pos":1}},{"b.line_comment":{"text":"#export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}","subs":[{"b.line_comment_context":{"text":"","pos":17}},{"b.line_comment_body":{"text":"#export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}","subs":[{"b.line_comment_text":{"text":"export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}","pos":18}}],"pos":17}}],"pos":17}},{"b.line_comment":{"text":"# stop any container that the output of docker ps matches against the","subs":[{"b.line_comment_context":{"text":"","pos":323}},{"b.line_comment_body":{"text":"# stop any container that the output of docker ps matches against the","subs":[{"b.line_comment_text":{"text":" stop any container that the output of docker ps matches against the","pos":324}}],"pos":323}}],"pos":323}},{"b.line_comment":{"text":"# given grep pattern","subs":[{"b.line_comment_context":{"text":"","pos":393}},{"b.line_comment_body":{"text":"# given grep pattern","subs":[{"b.line_comment_text":{"text":" given grep pattern","pos":394}}],"pos":393}}],"pos":393}},{"b.line_comment":{"text":"# start the etcd docker container","subs":[{"b.line_comment_context":{"text":"","pos":523}},{"b.line_comment_body":{"text":"# start the etcd docker container","subs":[{"b.line_comment_text":{"text":" start the etcd docker container","pos":524}}],"pos":523}}],"pos":523}},{"b.line_comment":{"text":"# start the various kubernetes containers via the kyperkube","subs":[{"b.line_comment_context":{"text":"","pos":766}},{"b.line_comment_body":{"text":"# start the various kubernetes containers via the kyperkube","subs":[{"b.line_comment_text":{"text":" start the various kubernetes containers via the kyperkube","pos":767}}],"pos":766}}],"pos":766}},{"b.line_comment":{"text":"# start the kubernetes proxy (we are running the kubelet on this node)","subs":[{"b.line_comment_context":{"text":"","pos":1175}},{"b.line_comment_body":{"text":"# start the kubernetes proxy (we are running the kubelet on this node)","subs":[{"b.line_comment_text":{"text":" start the kubernetes proxy (we are running the kubelet on this node)","pos":1176}}],"pos":1175}}],"pos":1175}},{"b.line_comment":{"text":"# wrapper to start the whole stack","subs":[{"b.line_comment_context":{"text":"","pos":1433}},{"b.line_comment_body":{"text":"# wrapper to start the whole stack","subs":[{"b.line_comment_text":{"text":" wrapper to start the whole stack","pos":1434}}],"pos":1433}}],"pos":1433}},{"b.line_comment":{"text":"# logic to remove only the jenca\/kubernetes containers","subs":[{"b.line_comment_context":{"text":"","pos":1521}},{"b.line_comment_body":{"text":"# logic to remove only the jenca\/kubernetes containers","subs":[{"b.line_comment_text":{"text":" logic to remove only the jenca\/kubernetes containers","pos":1522}}],"pos":1521}}],"pos":1521}},{"b.line_comment":{"text":"\t#docker rm -f INSERTNAMESHERE","subs":[{"b.line_comment_context":{"text":"\t","pos":1914}},{"b.line_comment_body":{"text":"#docker rm -f INSERTNAMESHERE","subs":[{"b.line_comment_text":{"text":"docker rm -f INSERTNAMESHERE","pos":1916}}],"pos":1915}}],"pos":1914}},{"b.line_comment":{"text":"# this tool is designed for the user to have already sorted out what branch each repo","subs":[{"b.line_comment_context":{"text":"","pos":1988}},{"b.line_comment_body":{"text":"# this tool is designed for the user to have already sorted out what branch each repo","subs":[{"b.line_comment_text":{"text":" this tool is designed for the user to have already sorted out what branch each repo","pos":1989}}],"pos":1988}}],"pos":1988}},{"b.line_comment":{"text":"# is on and have committed any changes etc","subs":[{"b.line_comment_context":{"text":"","pos":2074}},{"b.line_comment_body":{"text":"# is on and have committed any changes etc","subs":[{"b.line_comment_text":{"text":" is on and have committed any changes etc","pos":2075}}],"pos":2074}}],"pos":2074}}],"pos":1}}
