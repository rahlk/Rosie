{"cpp.line_comments":{"text":"#include \"CPU.h\"\nusing namespace FAES;\n\nbool CPU::cpuidSupported() {\n  \/\/ This method uses the ID flag in bit 21 of the EFLAGS register. If\n  \/\/ software can change the value of this flag, the CPUID instruction\n  \/\/ is executable.\n  unsigned int res;\n  __asm__ (\"mov %%ecx, %%eax;\"\n           \"xor $200000, %%eax;\"\n           \"xor %%ecx, %%eax;\"\n           \"je no;\"\n           \"mov $1, %%eax;\"\n           \"jmp end;\"\n           \"no: mov $0, %%eax;\"\n           \"end:;\"\n           : \"=a\" (res)\n           :\n           : \"cc\"); \n  \n  return res > 0;\n}\n\nvoid CPU::cpuid(unsigned int opcode, unsigned int result[4]) {\n  if (!cpuidSupported()) return;\n\n  \/\/ PIC compliant version\n  __asm__ (\"cpuid;\"\n           \"movl %%ebx, %1;\" \n           : \"=a\" (result[0]), \/\/ EAX register -> result[0]\n             \"=r\" (result[1]), \/\/ EBX register -> result[1]\n             \"=c\" (result[2]), \/\/ ECX register -> result[2]\n             \"=d\" (result[3])  \/\/ EDX register -> result[3]\n           : \"0\" (opcode)\n           : \"cc\");\n}\n\nbool CPU::sse41Supported() {\n  CPUFeatures2_t features;\n  unsigned int res[4];\n  cpuid(1, res);\n  features.raw_data = res[3];\n  return features.features.SSE4_1 == 1;  \n}\n\nbool CPU::aesSupported() {\n  CPUFeatures2_t features;\n  unsigned int res[4];\n  cpuid(1, res);\n  features.raw_data = res[3];\n  return features.features.AES == 1;\n}\n","subs":[{"cpp.line_comment":{"text":"  \/\/ This method uses the ID flag in bit 21 of the EFLAGS register. If","subs":[{"cpp.line_comment_context":{"text":"  ","pos":70}},{"cpp.line_comment_body":{"text":"\/\/ This method uses the ID flag in bit 21 of the EFLAGS register. If","subs":[{"cpp.line_comment_text":{"text":" This method uses the ID flag in bit 21 of the EFLAGS register. If","pos":74}}],"pos":72}}],"pos":70}},{"cpp.line_comment":{"text":"  \/\/ software can change the value of this flag, the CPUID instruction","subs":[{"cpp.line_comment_context":{"text":"  ","pos":141}},{"cpp.line_comment_body":{"text":"\/\/ software can change the value of this flag, the CPUID instruction","subs":[{"cpp.line_comment_text":{"text":" software can change the value of this flag, the CPUID instruction","pos":145}}],"pos":143}}],"pos":141}},{"cpp.line_comment":{"text":"  \/\/ is executable.","subs":[{"cpp.line_comment_context":{"text":"  ","pos":212}},{"cpp.line_comment_body":{"text":"\/\/ is executable.","subs":[{"cpp.line_comment_text":{"text":" is executable.","pos":216}}],"pos":214}}],"pos":212}},{"cpp.line_comment":{"text":"  \/\/ PIC compliant version","subs":[{"cpp.line_comment_context":{"text":"  ","pos":647}},{"cpp.line_comment_body":{"text":"\/\/ PIC compliant version","subs":[{"cpp.line_comment_text":{"text":" PIC compliant version","pos":651}}],"pos":649}}],"pos":647}},{"cpp.line_comment":{"text":"           : \"=a\" (result[0]), \/\/ EAX register -> result[0]","subs":[{"cpp.line_comment_context":{"text":"           : \"=a\" (result[0]), ","pos":724}},{"cpp.line_comment_body":{"text":"\/\/ EAX register -> result[0]","subs":[{"cpp.line_comment_text":{"text":" EAX register -> result[0]","pos":757}}],"pos":755}}],"pos":724}},{"cpp.line_comment":{"text":"             \"=r\" (result[1]), \/\/ EBX register -> result[1]","subs":[{"cpp.line_comment_context":{"text":"             \"=r\" (result[1]), ","pos":784}},{"cpp.line_comment_body":{"text":"\/\/ EBX register -> result[1]","subs":[{"cpp.line_comment_text":{"text":" EBX register -> result[1]","pos":817}}],"pos":815}}],"pos":784}},{"cpp.line_comment":{"text":"             \"=c\" (result[2]), \/\/ ECX register -> result[2]","subs":[{"cpp.line_comment_context":{"text":"             \"=c\" (result[2]), ","pos":844}},{"cpp.line_comment_body":{"text":"\/\/ ECX register -> result[2]","subs":[{"cpp.line_comment_text":{"text":" ECX register -> result[2]","pos":877}}],"pos":875}}],"pos":844}},{"cpp.line_comment":{"text":"             \"=d\" (result[3])  \/\/ EDX register -> result[3]","subs":[{"cpp.line_comment_context":{"text":"             \"=d\" (result[3])  ","pos":904}},{"cpp.line_comment_body":{"text":"\/\/ EDX register -> result[3]","subs":[{"cpp.line_comment_text":{"text":" EDX register -> result[3]","pos":937}}],"pos":935}}],"pos":904}}],"pos":1}}
