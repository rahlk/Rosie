{"cpp.structs":{"pos":1,"text":"s (72 sloc)  2.92 KB\n\/*******************************************************************************\n *  Project: libopencad\n *  Purpose: OpenSource CAD formats support library\n *  Author: Alexandr Borzykh, mush3d at gmail.com\n *  Author: Dmitry Baryshnikov, bishop.dev@gmail.com\n *  Language: C++\n *******************************************************************************\n *  The MIT License (MIT)\n *\n *  Copyright (c) 2016 Alexandr Borzykh\n *  Copyright (c) 2016 NextGIS, <info@nextgis.com>\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n ******************************************************************************\/\n#ifndef CADFILEIO_H\n#define CADFILEIO_H\n\n#include <cstddef>\n#include <string>\n\n\/**\n * @brief The CADFileIO class provides in\/out file operations as read, write,\n * seek, etc. This is abstract class.\n *\/\nclass CADFileIO\n{\npublic:\n    enum class SeekOrigin\n    {\n        BEG, \/**< Begin of the file *\/\n        CUR, \/**< Current position of the pointer *\/\n        END  \/**< End of file *\/\n    };\n\n    enum OpenMode\n    {\n        binary      = 1L << 2,\n        read        = 1L << 3,\n        write       = 1L << 4\n    };\n\npublic:\n    CADFileIO( const char * pszFileName );\n    virtual                 ~CADFileIO();\n\n    virtual const char * ReadLine() = 0;\n    virtual bool     Eof()                                      = 0;\n    virtual bool     Open( int mode )                           = 0;\n    virtual bool     IsOpened() const;\n    virtual bool     Close();\n    virtual int      Seek( long int offset, SeekOrigin origin ) = 0;\n    virtual long int Tell()                                     = 0;\n    virtual size_t   Read( void * ptr, size_t size )            = 0;\n    virtual size_t   Write( void * ptr, size_t size )           = 0;\n    virtual void     Rewind()                                   = 0;\n    const char * GetFilePath() const;\n\nprotected:\n    std::string m_soFilePath;\n    bool        m_bIsOpened;\n};\n\n"}}
